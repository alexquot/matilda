//
// Links
//

a[href],
.btn-link {
  font-weight: $font-weight-bold;
}

//
// Card
//

.card {
  @include elevation(2);

  .card {
    @include elevation(0);

    border: $border-width solid $card-border-color;
    border-radius: $border-radius;
  }

  .card-header .card-header-tabs {
    padding-right: $card-spacer-x;
    padding-left: $card-spacer-x;
    margin-right: -$card-spacer-x;
    margin-left: -$card-spacer-x;
  }
}

//
// Dropdowns
//

.dropdown-menu {
  overflow: hidden;

  a {
    @include ripple();
  }
}

//
// Nav
//

.navbar {
  @include elevation(6);
}

.nav-tabs {
  a {
    @include ripple();

    color: $text-muted;

    &.active {
      @include underline-after(2 * $border-width, $primary);
    }
  }
}

.nav .nav-item .nav-link {
  font-size: $font-size-sm;
  font-weight: $btn-font-weight;
}

//
// Tables
//

th {
  color: $text-muted;
  font: $table-head-font;
}

td {
  font: $table-font;
}

//
// Forms
//

$input-addon-padding: 0.5rem;

.input-group-prepend .input-group-text {
  padding-right: $input-addon-padding;
}

.input-group-append .input-group-text {
  padding-left: $input-addon-padding;
}

.custom-control label:hover,
.custom-select {
  cursor: pointer;
}

select.custom-select {
  // idk why is this needed for .custom-select and .form-control alignment
  height: calc(#{$custom-select-height} + #{$border-width});
  -moz-appearance: none; // Firefox
  -webkit-appearance: none; // Safari and Chrome
  appearance: none;

  @include transition($input-transition);
}

//
// Buttons
//

.btn:not(.btn-link) {
  font-size: $font-size-sm;
  text-transform: $btn-text-transform;

  &.btn-sm {
    font-size: $font-size-sm * 0.875;
  }

  &.btn-lg {
    font-size: $font-size-base;
  }
}

@mixin btn-any-state() {
  &,
  &:hover,
  &:focus,
  &.btn:not(:disabled):not(.disabled):active,
  &.btn:not(:disabled):not(.disabled).active {
    @content;
  }
}

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-outline-variant($value, $value, transparentize($value, 0.9));

    @include btn-any-state {
      color: $value;
    }

    @if $enable-ripple {
      @include ripple($value);
    }
  }

  .btn-outline-#{$color} {
    @extend .btn-#{$color};

    @include btn-any-state {
      border-color: $border-color;
      border-width: $border-width;
    }

    padding: calc(#{$btn-padding-y} - #{$border-width}) $btn-padding-x;
  }

  .btn-contained-#{$color} {
    @include button-variant(
      $value, $value,
      $value, $value,
      $value, $value
    );

    @if $enable-ripple {
      @include ripple(color-yiq($value));
    }
  }
}

//
// Modals
//

.modal-content div + div {
  padding-top: 0;
}

//
// Alerts
//

@each $color, $value in $theme-colors {
  .alert.alert-#{$color} {
    color: color-yiq($value);
  }
}

//
// Pagination
//

.pagination .page-link {
  border-radius: $border-radius;
}

//
// Quotes
//

.blockquote {
  padding-left: 0.7rem;
  border-left: 0.4rem solid transparentize($body-color, 0.75);
}

//
// Progress
//

.progress {
  position: relative;
  overflow: hidden;

  .progress-bar-animated {
    &::before {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      animation: indeterminate 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;
      background-color: inherit;
      content: '';
      will-change: left, right;
    }

    &::after {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      animation: indeterminate-short 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) infinite;
      animation-delay: 1.15s;
      background-color: inherit;
      content: '';
      will-change: left, right;
    }
  }
}

@keyframes indeterminate {
  0% {
    right: 100%;
    left: -35%;
  }

  60% {
    right: -90%;
    left: 100%;
  }

  100% {
    right: -90%;
    left: 100%;
  }
}

@keyframes indeterminate-short {
  0% {
    right: 100%;
    left: -200%;
  }

  60% {
    right: -8%;
    left: 107%;
  }

  100% {
    right: -8%;
    left: 107%;
  }
}

//
// Code
//

code {
  padding: $code-padding;
  background-color: $code-bg;
  border-radius: $code-border-radius;
}

pre code {
  display: block;
  padding: $pre-code-padding;
  background-color: $pre-bg;
  overflow-x: auto;
}
